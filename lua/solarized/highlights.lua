local function is_transparent(color)
  if vim.g.transparent_background then
    return 'NONE'
  end

  return color
end

local highlights = {
  Normal = { fg = C.base1, bg = Config.transparent_background and 'NONE' or C.base03 },
  SignColumn = { bg = C.base03 },
  MsgArea = { fg = C.base1, bg = Config.transparent_background and 'NONE' or C.base02 },
  ModeMsg = { fg = C.blue },
  MsgSeparator = { fg = C.base1, bg = C.base02 },
  SpellBad = { fg = C.red, style = 'underline' },
  SpellCap = { fg = C.violet, style = 'underline' },
  SpellLocal = { fg = C.yellow, style = 'underline' },
  SpellRare = { fg = C.cyan, style = 'underline' },
  NormalNC = { fg = C.base1, bg = Config.transparent_background and 'NONE' or C.base02 },
  Pmenu = { fg = C.base0, bg = C.base02 },
  PmenuSel = { fg = C.base01, bg = C.base2 },
  WildMenu = { fg = C.base2, bg = C.base02 },
  CursorLineNr = { bg = C.base02, style = 'bold' },
  Comment = { fg = C.base0, style = 'italic' },
  Folded = { fg = C.base0, bg = C.base02 },
  FoldColumn = { fg = C.base0, bg = C.base02 },
  LineNr = { fg = C.base01, bg = C.base02 },
  FloatBoder = { fg = C.base0, bg = C.base02 },
  Whitespace = { fg = C.base02 },
  VertSplit = { fg = C.base00, bg = is_transparent(C.base00) },
  CursorLine = { bg = C.base02 },
  CursorColumn = { bg = C.base02 },
  ColorColumn = { bg = C.base02 },
  NormalFloat = { bg = C.base02 },
  Visual = { fg = C.base01, bg = C.base03 },
  VisualNOS = { bg = C.base02 },
  WarningMsg = { fg = C.red, style = 'bold' },
  DiffAdd = { fg = C.blue, bg = C.none, style = 'underline' },
  DiffChange = { fg = C.yellow, bg = C.none, style = 'underline' },
  DiffDelete = { fg = C.red, bg = C.none, style = 'underline' },
  DiffText = { fg = C.cyan, bg = C.none },
  DiffAdded = { fg = C.blue },
  DiffRemoved = { fg = C.red },
  DiffFile = { fg = C.cyan },
  DiffIndexLine = { fg = C.base00 },
  QuickFixLine = { bg = C.base02 },
  PmenuSbar = { fg = C.base2, bg = C.base0 },
  PmenuThumb = { fg = C.base0, bg = C.base03 },
  MatchWord = { style = 'underline' },
  MatchParen = { fg = C.red, bg = C.base01, style = 'underline' },
  MatchWordCur = { style = 'underline' },
  MatchParenCur = { style = 'underline' },
  Cursor = { fg = C.base03, bg = C.base0 },
  lCursor = { fg = C.base03, bg = C.base0 },
  CursorIM = { fg = C.base01, bg = C.base0 },
  TermCursor = { fg = C.base03, bg = C.base0 },
  TermCursorNC = { fg = C.base03, bg = C.base0 },
  Conceal = { fg = C.blue },
  Directory = { fg = C.blue },
  SpecialKey = { fg = C.blue, style = 'bold' },
  Title = { fg = C.orange, style = 'bold' },
  ErrorMsg = { fg = C.red, bg = C.base02, style = 'bold' },
  Search = { fg = C.base1, bg = C.base01 },
  IncSearch = { fg = C.orange },
  Substitute = { fg = C.base0, bg = C.orange },
  MoreMsg = { fg = C.blue },
  Question = { fg = C.cyan },
  EndOfBuffer = { fg = C.base02 },
  NonText = { fg = C.base00 },
  Variable = { fg = C.cyan },
  String = { fg = C.green },
  Character = { fg = C.green },
  Constant = { fg = C.orange },
  Number = { fg = C.orange },
  Boolean = { fg = C.orange },
  Float = { fg = C.orange },
  Identifier = { fg = C.base1 },
  Function = { fg = C.blue },
  Operator = { fg = C.violet },
  Type = { fg = C.yellow },
  StorageClass = { fg = C.cyan },
  Structure = { fg = C.violet },
  Typedef = { fg = C.violet },
  Keyword = { fg = C.violet },
  Statement = { fg = C.violet },
  Conditional = { fg = C.violet },
  Repeat = { fg = C.violet },
  Label = { fg = C.blue },
  Exception = { fg = C.violet },
  Include = { fg = C.violet },
  PreProc = { fg = C.violet },
  Define = { fg = C.violet },
  Macro = { fg = C.violet },
  PreCondit = { fg = C.violet },
  Special = { fg = C.violet },
  SpecialChar = { fg = C.base1 },
  Tag = { fg = C.blue },
  Debug = { fg = C.red },
  Delimiter = { fg = C.base1 },
  SpecialComment = { fg = C.base0 },
  Underlined = { style = 'underline' },
  Bold = { style = 'bold' },
  Italic = { style = 'italic' },
  Ignore = { fg = C.cyan, bg = C.base02, style = 'bold' },
  Todo = { fg = C.red, bg = C.base02, style = 'bold' },
  Error = { fg = C.red, bg = C.base02, style = 'bold' },
  TabLine = { fg = C.base0, bg = C.base02 },
  TabLineSel = { fg = C.base01, bg = C.base2 },
  TabLineFill = { fg = C.base0, bg = C.base02 },
}

return highlights
